syndicalist_socdem_government_change = {
  if = {
    limit = {
      ROOT = {
        has_government = social_democrat
        has_country_flag = soc_dems_are_socialists
      }
    }
    hidden_effect = {
      set_politics = {
        ruling_party = radical_socialist
        elections_allowed = no
      }
      add_popularity = {
        ideology = radical_socialist
        popularity = 0.4
      }
    }
  }
}
occupy_tiny_country = {
  add_political_power = -10
  add_stability = -0.01
  add_war_support = -0.01
  recheck_annexations = yes
}
occupy_small_country = {
  add_political_power = -25
  add_stability = -0.025
  add_war_support = -0.025
  recheck_annexations = yes
}
occupy_medium_country = {
  add_political_power = -50
  add_stability = -0.05
  add_war_support = -0.05
  recheck_annexations = yes
}
occupy_large_country = {
  add_political_power = -100
  add_stability = -0.1
  add_war_support = -0.1
  recheck_annexations = yes
}
occupy_huge_country = {
  add_political_power = -150
  add_stability = -0.15
  add_war_support = -0.15
  recheck_annexations = yes
}
occupy_massive_country = {
  add_political_power = -200
  add_stability = -0.2
  add_war_support = -0.2
  recheck_annexations = yes
}
occupy_state = {
  set_state_flag = occupied_by_@PREV
  set_temp_variable = {
    occupied_by_@THIS = 1
  }
  ROOT = {
    recheck_annexations = yes
  }
}
transfer_and_occupy_state = {
  transfer_state_to = PREV
  set_state_flag = occupied_by_@PREV
  ROOT = {
    recheck_annexations = yes
  }
}
occupy_state_annexation = {
  set_state_flag = occupied_by_@PREV
  set_state_flag = annexation_occupied_by_@PREV
  set_temp_variable = {
    occupied_by_@THIS = 1
  }
  ROOT = {
    recheck_annexations = yes
  }
}
transfer_and_occupy_state_annexation = {
  transfer_state_to = PREV
  set_state_flag = occupied_by_@PREV
  set_state_flag = annexation_occupied_by_@PREV
  ROOT = {
    recheck_annexations = yes
  }
}
clear_occupy_state = {
  clr_state_flag = occupied_by_@PREV
  clr_state_flag = annexation_occupied_by_@PREV
  clear_variable = occupied_by_@THIS
  ROOT = {
    recheck_annexations = yes
  }
}
state_given_notification_effect = {
  hidden_effect = {
    if = {
      limit = {
        owner = {
          is_ai = no
        }
      }
      save_event_target_as = granted_land
      state_event = {
        id = annex.2
        trigger_for = owner
      }
    }
  }
}
retain_state = {
  set_state_flag = {
    flag = retain_state_@ROOT
    days = 16
    value = 1
  }
  set_temp_variable = {
    retain_state_@THIS = 1
  }
}
clear_retain_state = {
  clr_state_flag = retain_state_@PREV
  clear_variable = retain_state_@THIS
}
clear_retained_states = {
  hidden_effect = {
    every_state = {
      limit = {
        has_state_flag = retain_state_@PREV
      }
      clr_state_flag = retain_state_@PREV
    }
  }
}
transfer_state_without_overriding_occupation = {
  if = {
    limit = {
      is_fully_controlled_by = owner
    }
    transfer_state_to = var:tag_to_release
  }
  else = {
    set_state_owner_to = var:tag_to_release
    set_state_province_controller = {
      controller = var:tag_to_release
      limit = {
        NOT = {
          has_war_with = ROOT
        }
      }
    }
  }
}
temporarily_disable_country_annexation = {
  hidden_effect = {
    every_core_state = {
      set_state_flag = {
        flag = temporarily_disabled_annexation_@ROOT
        value = 1
        days = 32
      }
    }
    country_event = {
      id = annex.1
      days = 32
    }
  }
}
temporarily_disable_annexation = {
  hidden_effect = {
    set_state_flag = {
      flag = temporarily_disabled_annexation_@ROOT
      value = 1
      days = 32
    }
    PREV = {
      country_event = {
        id = annex.1
        days = 32
      }
    }
  }
}
save_as_offered_state = {
  temporarily_disable_annexation = yes
  add_to_array = {
    PREV.offered_states_array = THIS
  }
}
transfer_state_and_add_core = {
  remove_claim_and_add_core_of_target = yes
  transfer_state_without_overriding_occupation = yes
  ROOT = {
    recheck_annexations = yes
  }
}
transfer_state_and_add_claim = {
  add_claim_of_target = yes
  transfer_state_without_overriding_occupation = yes
  ROOT = {
    recheck_annexations = yes
  }
}
transfer_state_and_add_claim_or_core = {
  if = {
    limit = {
      has_state_flag = was_core_of_@var:tag_to_release
    }
    transfer_state_and_add_core = yes
    clr_state_flag = was_core_of_@var:tag_to_release
  }
  else = {
    transfer_state_and_add_claim = yes
  }
}
remove_claim_and_add_core_of_ROOT = {
  if = {
    limit = {
      is_claimed_by = ROOT
    }
    remove_claim_by = ROOT
  }
  if = {
    limit = {
      NOT = {
        is_core_of = ROOT
      }
    }
    add_core_of = ROOT
  }
  ROOT = {
    recheck_annexations = yes
  }
}
remove_claim_and_add_core_of_target = {
  if = {
    limit = {
      is_claimed_by = var:tag_to_release
    }
    remove_claim_by = var:tag_to_release
  }
  if = {
    limit = {
      NOT = {
        is_core_of = var:tag_to_release
      }
    }
    add_core_of = var:tag_to_release
  }
  ROOT = {
    recheck_annexations = yes
  }
}
remove_claim_and_core_of_target = {
  if = {
    limit = {
      is_core_of = var:tag_to_release
    }
    remove_core_of = var:tag_to_release
  }
  if = {
    limit = {
      is_claimed_by = var:tag_to_release
    }
    remove_claim_by = var:tag_to_release
  }
  ROOT = {
    recheck_annexations = yes
  }
}
add_claim_of_ROOT = {
  if = {
    limit = {
      is_claim_or_core_of_ROOT = no
    }
    add_claim_by = ROOT
  }
  ROOT = {
    recheck_annexations = yes
  }
}
add_claim_of_target = {
  if = {
    limit = {
      NOT = {
        is_claimed_by = var:tag_to_release
        is_core_of = var:tag_to_release
      }
    }
    add_claim_by = var:tag_to_release
  }
  ROOT = {
    recheck_annexations = yes
  }
}
remove_claim_and_add_claim_of_target = {
  if = {
    limit = {
      NOT = {
        is_claimed_by = var:tag_to_release
        is_core_of = var:tag_to_release
      }
    }
    add_claim_by = var:tag_to_release
  }
  ROOT = {
    recheck_annexations = yes
  }
}
transfer_if_owned = {
  if = {
    limit = {
      is_valid_annexation_state = yes
    }
    transfer_state_without_overriding_occupation = yes
  }
  ROOT = {
    recheck_annexations = yes
  }
}
add_claim_of_target_and_transfer_if_owned = {
  if = {
    limit = {
      is_claim_or_core_of_ROOT = no
    }
    add_claim_of_target = yes
  }
  if = {
    limit = {
      is_valid_annexation_state = yes
    }
    transfer_state_without_overriding_occupation = yes
  }
  ROOT = {
    recheck_annexations = yes
  }
}
add_core_of_target_and_transfer_if_owned = {
  if = {
    limit = {
      is_claim_or_core_of_ROOT = no
    }
    remove_claim_and_add_core_of_target = yes
  }
  if = {
    limit = {
      is_valid_annexation_state = yes
    }
    transfer_state_without_overriding_occupation = yes
  }
  ROOT = {
    recheck_annexations = yes
  }
}
add_core_and_transfer_if_owned_else_add_claim = {
  if = {
    limit = {
      is_valid_annexation_state = yes
    }
    remove_claim_and_add_core_of_target = yes
    transfer_state_without_overriding_occupation = yes
  }
  else_if = {
    limit = {
      is_claim_or_core_of_ROOT = no
    }
    add_claim_of_target = yes
  }
  ROOT = {
    recheck_annexations = yes
  }
}
add_core_if_owned_else_add_claim = {
  if = {
    limit = {
      OR = {
        is_owned_by = var:tag_to_release
        is_valid_annexation_state = yes
      }
    }
    remove_claim_and_add_core_of_target = yes
  }
  else_if = {
    limit = {
      is_claim_or_core_of_ROOT = no
    }
    add_claim_of_target = yes
  }
  ROOT = {
    recheck_annexations = yes
  }
}
add_core_or_claim_of_target_and_transfer_if_owned = {
  if = {
    limit = {
      has_state_flag = was_core_of_@var:tag_to_release
    }
    clr_state_flag = was_core_of_@var:tag_to_release
    add_core_of_target_and_transfer_if_owned = yes
  }
  else_if = {
    limit = {
      is_claim_or_core_of_ROOT = no
    }
    add_claim_of_target_and_transfer_if_owned = yes
  }
}
set_transfer_target_cores = {
  set_temp_variable = {
    transfer_target_@THIS = 1
  }
}
set_transfer_target_state = {
  set_temp_variable = {
    state_transfer_target_@THIS = 1
  }
}
remove_all_cores_and_claims_of_tags = {
  every_state = {
    limit = {
      any_of = {
        array = core_removal_array
        OR = {
          is_core_of = var:v
          is_claimed_by = var:v
        }
      }
    }
    for_each_loop = {
      array = core_removal_array
      remove_core_of = var:v
      remove_claim_by = var:v
    }
  }
}
transfer_targeted_territory = {
  if = {
    limit = {
      has_war = yes
    }
    every_owned_state = {
      limit = {
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
        NOT = {
          has_state_flag = occupied_by_@PREV
        }
        NOT = {
          has_variable = occupied_by_@THIS
        }
        OR = {
          has_variable = state_transfer_target_@THIS
          any_country_with_core = {
            has_variable = transfer_target_@THIS
          }
        }
      }
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
        NOT = {
          has_state_flag = occupied_by_@PREV
        }
        NOT = {
          has_variable = occupied_by_@THIS
        }
        OR = {
          has_variable = state_transfer_target_@THIS
          any_country_with_core = {
            has_variable = transfer_target_@THIS
          }
        }
      }
      transfer_state_to = var:tag_to_release
    }
  }
  clear_retained_states = yes
  recheck_annexations = yes
}
transfer_territory_from_core_regions = {
  if = {
    limit = {
      has_war = yes
    }
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_to = var:tag_to_release
    }
  }
  hidden_effect = {
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      clr_state_flag = retain_state_@PREV
    }
  }
  clear_retained_states = yes
  recheck_annexations = yes
}
transfer_territory_from_core_regions_and_add_claims = {
  if = {
    limit = {
      has_war = yes
    }
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      add_claim_by = var:tag_to_release
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      add_claim_by = var:tag_to_release
      transfer_state_to = var:tag_to_release
    }
  }
  hidden_effect = {
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      clr_state_flag = retain_state_@PREV
    }
  }
  clear_retained_states = yes
  recheck_annexations = yes
}
transfer_territory_from_core_regions_and_add_cores = {
  if = {
    limit = {
      has_war = yes
    }
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      add_core_of = var:tag_to_release
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      add_core_of = var:tag_to_release
      transfer_state_to = var:tag_to_release
    }
  }
  hidden_effect = {
    every_owned_state = {
      limit = {
        any_of = {
          array = target_cores_to_release
          is_core_of = var:v
        }
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      clr_state_flag = retain_state_@PREV
    }
  }
  clear_retained_states = yes
  recheck_annexations = yes
}
release_targeted_tag_from_core_regions = {
  transfer_territory_from_core_regions = yes
  puppet_released_tag = yes
}
release_targeted_tag_from_core_regions_and_add_cores = {
  transfer_territory_from_core_regions_and_add_cores = yes
  puppet_released_tag = yes
}
release_targeted_tag_with_claims = {
  if = {
    limit = {
      has_war = yes
    }
    every_owned_state = {
      limit = {
        OR = {
          is_core_of = var:tag_to_release
          is_claimed_by = var:tag_to_release
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        OR = {
          is_core_of = var:tag_to_release
          is_claimed_by = var:tag_to_release
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_to = var:tag_to_release
    }
  }
  clear_retained_states = yes
  puppet_released_tag = yes
}
release_targeted_tag = {
  if = {
    limit = {
      has_war = yes
    }
    every_owned_state = {
      limit = {
        is_core_of = var:tag_to_release
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        is_core_of = var:tag_to_release
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_to = var:tag_to_release
    }
  }
  clear_retained_states = yes
  puppet_released_tag = yes
}
release_targeted_tag_nocosmetic = {
  if = {
    limit = {
      has_war = yes
    }
    every_owned_state = {
      limit = {
        is_core_of = var:tag_to_release
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        is_core_of = var:tag_to_release
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_state_flag = retain_state_@PREV
        }
        NOT = {
          has_variable = retain_state_@THIS
        }
      }
      transfer_state_to = var:tag_to_release
    }
  }
  clear_retained_states = yes
  puppet_released_tag_nocosmetic = yes
}
release_targeted_tag_during_war = {
  every_owned_state = {
    limit = {
      is_core_of = var:tag_to_release
      is_claim_or_core_of_ROOT = no
    }
    if = {
      limit = {
        is_fully_controlled_by = controller
        controller = {
          is_ally_of_ROOT = yes
        }
      }
      var:tag_to_release = {
        transfer_state = PREV
      }
    }
    else = {
      var:tag_to_release = {
        set_state_owner = PREV
      }
    }
  }
  puppet_released_tag = yes
}
transfer_to_ROOT = {
  if = {
    limit = {
      is_fully_controlled_by = controller
      controller = {
        is_ally_of_ROOT = yes
      }
    }
    ROOT = {
      transfer_state = PREV
    }
  }
  else = {
    ROOT = {
      set_state_owner = PREV
    }
  }
}
puppet_released_tag = {
  hidden_effect = {
    var:tag_to_release = {
      if = {
        limit = {
          has_country_flag = was_puppeted
        }
      }
    }
  }
  puppet = var:tag_to_release
  var:tag_to_release = {
    drop_cosmetic_tag = yes
    syndicalist_socdem_government_change = yes
    mark_focus_tree_layout_dirty = yes
    remove_all_minister_types = yes
    hidden_effect = {
      set_puppet_minister = yes
      transfer_technology_without_doctrines = yes
      remove_ideas = ready_to_surrender
      if = {
        limit = {
          ROOT = {
            has_elected_government = no
          }
        }
        set_politics = {
          ruling_party = var:current_party_ideology_group
          elections_allowed = no
        }
      }
      else = {
        meta_effect = {
          text = {
            set_politics = {
              ruling_party = var:current_party_ideology_group
              last_election = "[CURRENT_DATE]"
              elections_allowed = yes
            }
          }
          CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
        }
      }
    }
    custom_effect_tooltip = general_minister_change_tt
  }
  recheck_annexations = yes
}
puppet_released_tag = {
  puppet = var:tag_to_release
  var:tag_to_release = {
    drop_cosmetic_tag = yes
    syndicalist_socdem_government_change = yes
    mark_focus_tree_layout_dirty = yes
    remove_all_minister_types = yes
    hidden_effect = {
      set_puppet_minister = yes
      transfer_technology_without_doctrines = yes
      remove_ideas = ready_to_surrender
      if = {
        limit = {
          has_elected_government = no
        }
        set_politics = {
          ruling_party = var:current_party_ideology_group
          elections_allowed = no
        }
      }
      else = {
        set_politics = {
          ruling_party = var:current_party_ideology_group
          elections_allowed = yes
        }
      }
    }
    custom_effect_tooltip = general_minister_change_tt
  }
  recheck_annexations = yes
}
puppet_released_tag_nocosmetic = {
  puppet = var:tag_to_release
  var:tag_to_release = {
    syndicalist_socdem_government_change = yes
    mark_focus_tree_layout_dirty = yes
    remove_all_minister_types = yes
    hidden_effect = {
      set_puppet_minister = yes
      transfer_technology_without_doctrines = yes
      remove_ideas = ready_to_surrender
      if = {
        limit = {
          has_elected_government = no
        }
        set_politics = {
          ruling_party = var:current_party_ideology_group
          elections_allowed = no
        }
      }
      else = {
        set_politics = {
          ruling_party = var:current_party_ideology_group
          elections_allowed = yes
        }
      }
    }
    custom_effect_tooltip = general_minister_change_tt
  }
  recheck_annexations = yes
}
transfer_state_during_war_target_tag_to_release = {
  if = {
    limit = {
      owner = {
        has_war = no
      }
    }
    transfer_state_to = var:tag_to_release
  }
  else = {
    set_state_owner_to = var:tag_to_release
    set_state_province_controller = {
      controller = owner
      limit = {
        NOT = {
          has_war_with = PREV.owner
        }
      }
    }
  }
}
setup_PIR_cores = {
  hidden_effect = {
    PIR = {
      add_state_core = 502
      add_state_core = 503
      add_state_core = 894
      add_state_core = 1041
    }
  }
}
setup_AMA_cores = {
  hidden_effect = {
    AMA = {
      add_state_core = 495
      add_state_core = 855
      add_state_core = 898
      add_state_core = 900
      add_state_core = 1030
      add_state_core = 1031
      add_state_core = 1033
      add_state_core = 1040
      add_state_core = 1305
      add_state_core = 1306
      add_state_core = 1307
      add_state_core = 1310
      add_state_core = 1311
    }
  }
}
setup_GRP_cores = {
  hidden_effect = {
    GRP = {
      add_state_core = 498
      add_state_core = 497
      add_state_core = 896
    }
  }
}
setup_GOY_cores = {
  hidden_effect = {
    GOY = {
      add_state_core = 280
      add_state_core = 504
      add_state_core = 505
      add_state_core = 1043
    }
  }
}
setup_RJM_cores = {
  hidden_effect = {
    RJM = {
      add_state_core = 496
      add_state_core = 500
      add_state_core = 895
    }
  }
}
setup_brazilian_splinters = {
  hidden_effect = {
    setup_PIR_cores = yes
    BAH = {
      add_state_core = 499
    }
    SPO = {
      add_state_core = 501
    }
    setup_AMA_cores = yes
    setup_GRP_cores = yes
    setup_GOY_cores = yes
    setup_RJM_cores = yes
    BRA = {
      every_unit_leader = {
        limit = {
          OR = {
            has_id = 1612
            has_id = 1623
            has_id = 1630
            has_id = 1615
            has_id = 1616
            has_id = 1614
          }
        }
        set_nationality = PIR
      }
      every_unit_leader = {
        limit = {
          OR = {
            has_id = 1613
            has_id = 1620
            has_id = 1626
            has_id = 1631
          }
        }
        set_nationality = SPO
      }
      every_unit_leader = {
        limit = {
          OR = {
            has_id = 1618
            has_id = 1621
            has_id = 1622
            has_id = 1624
          }
        }
        set_nationality = GRP
      }
      every_unit_leader = {
        limit = {
          OR = {
            has_id = 1611
            has_id = 1617
            has_id = 1632
          }
        }
        set_nationality = GOY
      }
      every_unit_leader = {
        limit = {
          OR = {
            has_id = 1625
            has_id = 1628
            has_id = 1619
            has_id = 1629
          }
        }
        set_nationality = RJM
      }
    }
  }
}
remove_portuguese_monarchy = {
  POR = {
    if = {
      limit = {
        OR = {
          has_country_leader = {
            name = "杜阿尔特二世"  # Duarte II
            ruling_only = yes
          }
          has_country_leader = {
            name = "玛丽亚三世"  # Maria III
            ruling_only = yes
          }
          has_country_leader = {
            name = "玛丽亚·安娜"  # Maria Ana
            ruling_only = yes
          }
          has_country_leader = {
            name = "玛丽亚·阿德莱德"  # Maria Adelaide
            ruling_only = yes
          }
        }
      }
      create_country_leader = {
        name = "安东尼奥·德·奥利维拉·萨拉查"  # António de Oliveira Salazar
        desc = ""
        picture = "gfx/leaders/POR/Portrait_POR_Antonio_Salazar.png"
        expire = "1.1.1"
        ideology = autdem_christian_democracy_subtype
      }
      create_country_leader = {
        name = "安东尼奥·奥斯卡·德·弗拉戈索·卡尔莫纳"  # António Óscar de Fragoso Carmona
        desc = ""
        picture = "gfx/leaders/POR/Portrait_Portugal_Antonio_Carmona.png"
        expire = "1.1.1"
        ideology = junta_subtype
      }
      create_country_leader = {
        name = "弗朗西斯科·罗朗·普雷托"  # Francisco Rolão Preto
        desc = ""
        picture = "gfx/leaders/POR/Portrait_POR_Francisco_Rolao_Preto.png"
        expire = "1.1.1"
        ideology = right_syndicalism_subtype
      }
    }
  }
}
setup_puppet_lithuania = {
  if = {
    limit = {
      is_german_tag = yes
      has_socialist_government = no
    }
    LIT = {
      set_cosmetic_tag = LIT_monarchy
      meta_effect = {
        text = {
          create_country_leader = {
            name = "明道加斯三世"  # Mindaugas III
            desc = "POLITICS_MINDAUGAS_III_DESC"
            picture = "gfx/leaders/LIT/Portrait_LIT_Mindaugas_III.png"
            expire = "1.1.1"
            ideology = [OVERLORD_IDEOLOGY]
          }
        }
        OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
      }
      set_country_flag = was_puppeted
    }
  }
  else_if = {
    limit = {
      is_russian_tag_that_can_integrate = yes
      RUS_russian_monarch = yes
      has_socialist_government = no
    }
    LIT = {
      set_cosmetic_tag = LIT_monarchy
      meta_effect = {
        text = {
          create_country_leader = {
            name = "卡济米埃拉斯二世"  # Kazimieras II
            desc = "POLITICS_KAZIMIERAS_II_DESC"
            picture = "gfx/leaders/LIT/Portrait_LIT_Kazimieras_II_Tiskevicius.png"
            expire = "1.1.1"
            ideology = [OVERLORD_IDEOLOGY]
          }
        }
        OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
      }
      set_country_flag = was_puppeted
    }
  }
  else = {
    LIT = {
      set_cosmetic_tag = LIT_republican
      create_country_leader = {
        name = "斯特波纳斯·凯里斯"  # Steponas Kairys
        desc = "POLITICS_STEPONAS_KAIRYS_DESC"
        picture = "gfx/leaders/LIT/Portrait_LIT_Steponas_Kairys.png"
        expire = "1.1.1"
        ideology = revisionist_marxism_subtype
      }
      create_country_leader = {
        name = "斯坦尼斯瓦夫·纳鲁托维奇"  # Stanislaw Narutowicz
        desc = "POLITICS_STANISLAW_NARUTOWICZ_DESC"
        picture = "gfx/leaders/LIT/Portrait_LIT_Stanislaw_Narutowicz.png"
        expire = "1.1.1"
        ideology = centrist_subtype
      }
      create_country_leader = {
        name = "瓦茨洛瓦斯·西济考斯卡斯"  # Vaclovas Sidzikauskas
        desc = "POLITICS_VACLOVAS_SIDZIKAUSKAS_DESC"
        picture = "gfx/leaders/LIT/Portrait_LIT_Vaclovas_Sidzikauskas.png"
        expire = "1.1.1"
        ideology = market_liberal_subtype
      }
      create_country_leader = {
        name = "斯塔西斯·沙尔考斯基斯"  # Stasys Salkauskis
        desc = "POLITICS_STASYS_SALKAUSKIS_DESC"
        picture = "gfx/leaders/LIT/Portrait_LIT_Stasys_Salkauskis.png"
        expire = "1.1.1"
        ideology = optimal_system_subtype
      }
      create_country_leader = {
        name = "安塔纳斯·斯梅托纳"  # Antanas Smetona
        desc = "POLITICS_ANTANAS_SMETONA_DESC"
        picture = "gfx/leaders/LIT/Portrait_LIT_Antanas_Smetona_KR.png"
        expire = "1.1.1"
        ideology = authoritarian_democrat_subtype
      }
      create_country_leader = {
        name = "波维拉斯·普莱哈维丘斯"  # Povilas Plechavičius
        desc = "POLITICS_POVILAS_PLECHAVICIUS_DESC"
        picture = "gfx/leaders/LIT/Portrait_LIT_Povilas_Plechavicius.png"
        expire = "1.1.1"
        ideology = junta_subtype
      }
    }
    if = {
      limit = {
        ROOT = {
          has_country_flag = soviet_russia_restored
        }
      }
      set_temp_variable = {
        target = LAT
      }
      SOV_puppet_TARGET_effect = yes
    }
  }
}
setup_puppet_baltic_union = {
  hidden_effect = {
    BAT = {
      set_politics = {
        ruling_party = radical_socialist
        elections_allowed = no
      }
      set_popularities = {
        totalist = 15
        radical_socialist = 45
        syndicalist = 30
        social_democrat = 5
        social_liberal = 1
        market_liberal = 0
        social_conservative = 1
        authoritarian_democrat = 1
        paternal_autocrat = 1
        national_populist = 1
      }
      create_country_leader = {
        name = "尤斯塔斯·帕莱茨基斯"  # Justas Paleckis
        picture = "gfx/leaders/LIT/Portrait_LIT_Justas_Paleckis.png"
        expire = "1.1.1"
        ideology = radical_socialist_subtype
      }
      set_party_name = {
        ideology = radical_socialist
        long_name = BAT_radical_socialist_union_long
        name = BAT_radical_socialist_union
      }
      set_party_name = {
        ideology = syndicalist
        long_name = BAT_syndicalist_union_long
        name = BAT_syndicalist_union
      }
      set_party_name = {
        ideology = totalist
        long_name = BAT_totalist_union_long
        name = BAT_totalist_union
      }
      division_template = {
        name = "Raudonosios Armijos divizija"
        division_names_group = LIT_INF_01
        regiments = {
          infantry = {
            x = 0
            y = 0
          }
          infantry = {
            x = 0
            y = 1
          }
          infantry = {
            x = 0
            y = 2
          }
          infantry = {
            x = 1
            y = 0
          }
          infantry = {
            x = 1
            y = 1
          }
          infantry = {
            x = 1
            y = 2
          }
        }
        support = {
          artillery = {
            x = 0
            y = 0
          }
        }
      }
      remove_ideas = {
        BAT_emigration
        BAT_emigration_2
        BAT_emigration_3
        BAT_landeswehr
        BAT_landeswehr_professional_1
        BAT_landeswehr_professional_2
        BAT_landeswehr_professional_3
        BAT_landeswehr_manpower_1
        BAT_landeswehr_manpower_2
        BAT_landeswehr_manpower_3
        BAT_byzantine_government
        BAT_byzantine_government_2
        BAT_byzantine_government_3
        BAT_byzantine_government_4
      }
      1091 = {
        create_unit = {
          division = "division_template = \"Raudonosios Armijos divizija\" start_experience_factor = 0.3 start_equipment_factor = 1"
          owner = BAT
          count = 3
        }
      }
      create_corps_commander = {
        name = "叶卡布斯·彼得斯"  # Jēkabs Peterss
        portrait_path = "gfx/leaders/LAT/Portrait_LAT_Jekabs_Peterss.png"
        traits = {
          politically_connected
        }
        skill = 2
        attack_skill = 2
        defense_skill = 1
        planning_skill = 2
        logistics_skill = 2
      }
      every_unit_leader = {
        limit = {
          OR = {
            has_id = 555001
            has_id = 555002
            has_id = 555003
            has_id = 555004
            has_id = 555005
            has_id = 555006
          }
        }
        set_nationality = NSW
      }
      load_focus_tree = Baltic_Union_focus
    }
    LIT = {
      every_unit_leader = {
        limit = {
          OR = {
            has_id = 76614
            has_id = 556000
            has_id = 556001
          }
        }
        set_nationality = BAT
      }
    }
  }
}
setup_romanian_puppet_leaders = {
  hidden_effect = {
    if = {
      limit = {
        has_socialist_government = no
        NOT = {
          has_country_leader = {
            name = "扬·米哈拉凯"  # Ion Mihalache
            ruling_only = no
          }
          has_country_leader = {
            name = "迪努·布拉蒂亚努"  # Dinu Bratianu
            ruling_only = no
          }
        }
        ROOT = {
          OR = {
            is_american_tag = yes
            AND = {
              is_russian_tag_that_can_integrate = yes
              has_elected_government = yes
            }
            tag = UPC
          }
        }
      }
      create_country_leader = {
        name = "扬·米哈拉凯"  # Ion Mihalache
        picture = "gfx/leaders/ROM/Portrait_ROM_Ion_Mihalache.png"
        expire = "1.1.1"
        ideology = socdem_agrarianism_subtype
      }
      create_country_leader = {
        name = "扬·米哈拉凯"  # Ion Mihalache
        picture = "gfx/leaders/ROM/Portrait_ROM_Ion_Mihalache.png"
        expire = "1.1.1"
        ideology = soclib_agrarianism_subtype
      }
      create_country_leader = {
        name = "迪努·布拉蒂亚努"  # Dinu Bratianu
        picture = "gfx/leaders/ROM/Portrait_ROM_Dinu_Bratianu.png"
        expire = "1.1.1"
        ideology = marlib_national_liberalism_subtype
      }
      create_country_leader = {
        name = "迪努·布拉蒂亚努"  # Dinu Bratianu
        picture = "gfx/leaders/ROM/Portrait_ROM_Dinu_Bratianu.png"
        expire = "1.1.1"
        ideology = soccon_agrarianism_subtype
      }
    }
    if = {
      limit = {
        has_country_leader = {
          name = "卡罗尔二世"  # Carol II
          ruling_only = yes
        }
      }
      create_country_leader = {
        name = "米哈伊一世"  # Mihai I
        desc = "POLITICS_MICHAEL_I_DESC"
        picture = "gfx/leaders/ROM/Portrait_ROM_Michael_I.png"
        expire = "1.1.1"
        ideology = absolute_monarchy_subtype
      }
      create_country_leader = {
        name = "亚历山德鲁·坎塔库济诺"  # Alexandru Cantacuzino
        desc = "POLITICS_CANTACUZINO_DESC"
        picture = "gfx/leaders/ROM/Portrait_ROM_Alexandru_Cantacuzino.png"
        expire = "1.1.1"
        ideology = legionarism_subtype
        traits = {
          ROM_green_prince
        }
      }
    }
    if = {
      limit = {
        has_government = national_populist
        has_country_leader = {
          name = "米哈伊一世"  # Mihai I
          ruling_only = yes
        }
      }
      create_country_leader = {
        name = "亚历山德鲁·坎塔库济诺"  # Alexandru Cantacuzino
        desc = "POLITICS_CANTACUZINO_DESC"
        picture = "gfx/leaders/ROM/Portrait_ROM_Alexandru_Cantacuzino.png"
        expire = "1.1.1"
        ideology = legionarism_subtype
        traits = {
          ROM_green_prince
        }
      }
    }
  }
}
release_chinese_government = {
  if = {
    limit = {
      tag = JAP
      has_variable = japan_keeps_coast
    }
    every_owned_state = {
      limit = {
        is_controlled_chinese_region = yes
        if = {
          limit = {
            ROOT = {
              owns_state = 743
            }
          }
          is_possible_legation_cities_state = no
        }
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_variable = ambition_area_@ROOT
        }
      }
      add_claim_by = var:tag_to_release
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        is_controlled_chinese_region = yes
        if = {
          limit = {
            ROOT = {
              owns_state = 743
            }
          }
          is_possible_legation_cities_state = no
        }
        is_claim_or_core_of_ROOT = no
      }
      add_claim_by = var:tag_to_release
      transfer_state_to = var:tag_to_release
    }
  }
  puppet_released_tag = yes
  if = {
    limit = {
      var:tag_to_release = {
        tag = FNG
      }
    }
    set_autonomy = {
      target = var:tag_to_release
      autonomy_state = kr_special_autonomous_dependency
      end_wars = no
    }
  }
  if = {
    limit = {
      original_tag = JAP
    }
    clr_global_flag = JAP_defeated_by_china
    var:tag_to_release = {
      add_ideas = unequal_treaties_japan
    }
  }
}
release_chinese_government_in_manchuria = {
  if = {
    limit = {
      tag = JAP
      has_variable = japan_keeps_coast
    }
    every_owned_state = {
      limit = {
        is_manchuria = yes
        is_claim_or_core_of_ROOT = no
        NOT = {
          has_variable = ambition_area_@ROOT
        }
      }
      add_claim_by = var:tag_to_release
      transfer_state_without_overriding_occupation = yes
    }
  }
  else = {
    every_owned_state = {
      limit = {
        is_manchuria = yes
        is_claim_or_core_of_ROOT = no
      }
      add_claim_by = var:tag_to_release
      transfer_state_to = var:tag_to_release
    }
  }
  puppet_released_tag = yes
  if = {
    limit = {
      var:tag_to_release = {
        tag = FNG
      }
    }
    set_autonomy = {
      target = var:tag_to_release
      autonomy_state = kr_special_autonomous_dependency
      end_wars = no
    }
  }
}
setup_puppet_mexico = {
  MEX = {
    if = {
      limit = {
        has_government = totalist
        OVERLORD = {
          NOT = {
            OR = {
              has_country_leader_ideology = authcom_subtype
              has_country_leader_ideology = national_communism_subtype
              has_country_leader_ideology = technocratic_socialism_subtype
              has_country_leader_ideology = georgian_socialism_subtype
              has_country_leader_ideology = nazbol_subtype
              has_country_leader_ideology = esoteric_leninism_subtype
              has_country_leader_ideology = popcom_subtype
              has_country_leader_ideology = jacobinism_subtype
              has_country_leader_ideology = hoxhaism_subtype
              has_country_leader_ideology = ultra_hoxhaism_subtype
              has_country_leader_ideology = social_futurism_subtype
              has_country_leader_ideology = richytskyi_thought_subtype
              has_country_leader_ideology = hardliner_bolshevism_subtype
              has_country_leader_ideology = william_foster_thought_subtype
              has_country_leader_ideology = anarcho_bolshevism_subtype
              has_country_leader_ideology = internationalism_subtype
              has_country_leader_ideology = corn_communism_subtype
              has_country_leader_ideology = machiavellian_socialism_subtype
              has_country_leader_ideology = tot_anarcho_communism_subtype
              has_country_leader_ideology = broad_communism_subtype
              has_country_leader_ideology = bordigism_subtype
              has_country_leader_ideology = christian_communism_subtype
              has_country_leader_ideology = tot_bukharinist_subtype
            }
          }
        }
      }
      complete_national_focus = MEX_establish_maximato
    }
    else_if = {
      limit = {
        OVERLORD = {
          AND = {
            has_government = totalist
            OR = {
              has_country_leader_ideology = authcom_subtype
              has_country_leader_ideology = national_communism_subtype
              has_country_leader_ideology = technocratic_socialism_subtype
              has_country_leader_ideology = georgian_socialism_subtype
              has_country_leader_ideology = nazbol_subtype
              has_country_leader_ideology = esoteric_leninism_subtype
              has_country_leader_ideology = popcom_subtype
              has_country_leader_ideology = jacobinism_subtype
              has_country_leader_ideology = hoxhaism_subtype
              has_country_leader_ideology = ultra_hoxhaism_subtype
              has_country_leader_ideology = social_futurism_subtype
              has_country_leader_ideology = richytskyi_thought_subtype
              has_country_leader_ideology = hardliner_bolshevism_subtype
              has_country_leader_ideology = william_foster_thought_subtype
              has_country_leader_ideology = anarcho_bolshevism_subtype
              has_country_leader_ideology = internationalism_subtype
              has_country_leader_ideology = corn_communism_subtype
              has_country_leader_ideology = machiavellian_socialism_subtype
              has_country_leader_ideology = tot_anarcho_communism_subtype
              has_country_leader_ideology = broad_communism_subtype
              has_country_leader_ideology = bordigism_subtype
              has_country_leader_ideology = christian_communism_subtype
              has_country_leader_ideology = tot_bukharinist_subtype
            }
          }
        }
      }
      complete_national_focus = MEX_PCM_the_lenin_of_the_west
      create_country_leader = {
        name = "比森特·托莱达诺"  # Vicente Toledano
        desc = "POLITICS_VINCENTE_TOLEDANO_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Vincente_Toledano.png"
        expire = "1.1.1"
        ideology = authcom_subtype
        traits = {}
      }
      set_party_name = {
        name = MEX_communist_totalist_party
        long_name = MEX_communist_totalist_party_long
        ideology = totalist
      }
    }
    else_if = {
      limit = {
        OVERLORD = {
          has_socialist_government = yes
          NOT = {
            has_government = totalist
          }
        }
      }
      complete_national_focus = MEX_republic_survives
    }
    else_if = {
      limit = {
        OVERLORD = {
          has_democratic_government = yes
        }
      }
      complete_national_focus = MEX_constitutional_convention
    }
    else_if = {
      limit = {
        OVERLORD = {
          has_country_leader_ideology = junta_subtype
        }
        NOT = {
          has_global_flag = MEX_GARZA_DEAD
        }
      }
      complete_national_focus = MEX_JUNTA_president_garza
      complete_national_focus = MEX_JUNTA_military_junta
      create_country_leader = {
        name = "巴勃罗·冈萨雷斯·加尔萨"  # Pablo Gonzalez Garza
        desc = "POLITICS_PABLO_GONZALEZ_GARZA_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Pablo_Garza_Civilian.png"
        expire = "1.1.1"
        ideology = junta_subtype
        traits = {}
      }
      set_party_name = {
        ideology = paternal_autocrat
        long_name = MEX_paternal_autocrat_party_long
        name = MEX_paternal_autocrat_party
      }
    }
    else_if = {
      limit = {
        OVERLORD = {
          has_country_leader_ideology = junta_subtype
        }
        has_global_flag = MEX_GARZA_DEAD
      }
      complete_national_focus = MEX_juan_barragan
      create_country_leader = {
        name = "胡安·巴拉甘·罗德里格斯"  # Juan Barragán Rodríguez
        desc = "POLITICS_JUAN_BARRAGAN_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Juan_Barragan_Rodriguez.png"
        expire = "1.1.1"
        ideology = junta_subtype
        traits = {}
      }
      set_party_name = {
        ideology = paternal_autocrat
        long_name = MEX_paternal_autocrat_party_long
        name = MEX_paternal_autocrat_party
      }
    }
    else_if = {
      limit = {
        OVERLORD = {
          NOT = {
            has_country_leader_ideology = junta_subtype
          }
        }
      }
      complete_national_focus = MEX_felix_diaz
      create_country_leader = {
        name = "费利克斯·迪亚斯·普列托"  # Félix Díaz Prieto
        desc = "POLITICS_FELIX_DIAZ_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Felix_Diaz_Prieto.png"
        expire = "1.1.1"
        ideology = caudillo_populism_subtype
        traits = {}
      }
      set_party_name = {
        ideology = paternal_autocrat
        long_name = MEX_paternal_autocrat_party_long
        name = MEX_paternal_autocrat_party
      }
    }
    else_if = {
      limit = {
        OVERLORD = {
          AND = {
            has_government = national_populist
            has_country_leader_ideology = integralism_subtype
          }
        }
      }
      create_country_leader = {
        name = "何塞·巴斯孔塞略斯"  # José Vasconcelos
        desc = "POLITICS_VASCONCELOS_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Jose_Vasconcelos.png"
        expire = "1.1.1"
        ideology = integralism_subtype
        traits = {}
      }
      set_party_name = {
        ideology = national_populist
        name = MEX_integralist_national_populist_party
        long_name = MEX_integralist_national_populist_party_long
      }
      complete_national_focus = MEX_REP_integralist_republic
    }
    else_if = {
      limit = {
        OVERLORD = {
          AND = {
            has_government = national_populist
            has_country_leader_ideology = fundementalism_subtype
          }
        }
      }
      create_country_leader = {
        name = "何塞·安东尼奥·乌尔基萨"  # Jose Antonio Urquiza
        desc = "POLITICS_JOSE_URQUIZA_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Urquiza.png"
        expire = "1.1.1"
        ideology = right_syndicalism_subtype
        traits = {}
      }
      set_party_name = {
        ideology = national_populist
        name = MEX_synarchist_national_populist_party
        long_name = MEX_synarchist_national_populist_party_long
      }
      complete_national_focus = MEX_REP_synarchist_republic
    }
    else_if = {
      limit = {
        OVERLORD = {
          AND = {
            has_government = national_populist
            has_country_leader_ideology = townerism_subtype
          }
        }
      }
      create_country_leader = {
        name = "尼古拉斯·罗德里格斯·卡拉斯科"  # Nicolás Rodríguez Carrasco
        desc = "POLITICS_CARRASCO_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Nicolas_Rodriguez_Carrazco_Militar.png"
        expire = "1.1.1"
        ideology = national_populist_subtype
        traits = {}
      }
      set_party_name = {
        ideology = national_populist
        name = MEX_golshirt_national_populist_party
        long_name = MEX_golshirt_national_populist_party_long
      }
      complete_national_focus = MEX_GOL_new_guard_victorious
      complete_national_focus = MEX_GOL_old_or_new
    }
    else_if = {
      limit = {
        OVERLORD = {
          has_government = national_populist
          NOT = {
            OR = {
              has_country_leader_ideology = fundementalism_subtype
              has_country_leader_ideology = integralism_subtype
              has_country_leader_ideology = townerism_subtype
            }
          }
        }
      }
      create_country_leader = {
        name = "罗克·加尔萨"  # Roque Garza
        desc = "POLITICS_ROQUE_GARZA_DESC"
        picture = "gfx/leaders/MEX/Portrait_Mexico_Roque_Garza.png"
        expire = "1.1.1"
        ideology = national_populist_subtype
        traits = {}
      }
      set_party_name = {
        ideology = national_populist
        name = MEX_golshirt_national_populist_party
        long_name = MEX_golshirt_national_populist_party_long
      }
      complete_national_focus = MEX_GOL_old_guard_victorious
      complete_national_focus = MEX_GOL_old_or_new
    }
  }
  if = {
    limit = {
      country_exists = YUC
      NOT = {
        YUC = {
          has_country_flag = YUC_indepedence_war_over
        }
      }
    }
    YUC = {
      country_event = mexico.66
    }
  }
}
determine_chinese_ally = {
  hidden_effect = {
    if = {
      limit = {
        any_subject_country = {
          has_country_flag = china_integration_unlocked
        }
      }
      random_subject_country = {
        limit = {
          has_country_flag = china_integration_unlocked
        }
        save_event_target_as = china_ally_target
      }
    }
    else_if = {
      limit = {
        any_allied_country = {
          has_country_flag = china_integration_unlocked
        }
      }
      random_other_country = {
        limit = {
          is_in_faction_with = PREV
          has_country_flag = china_integration_unlocked
        }
        save_event_target_as = china_ally_target
      }
    }
    else_if = {
      limit = {
        has_socialist_government = yes
      }
      if = {
        limit = {
          CHI = {
            exists = yes
            OR = {
              has_socialist_government = yes
              has_government = social_democrat
            }
            china_annexation_valid_tag = yes
          }
        }
        CHI = {
          save_event_target_as = china_ally_target
        }
      }
      else = {
        CHI = {
          save_event_target_as = china_release_target
        }
      }
    }
    else_if = {
      limit = {
        OR = {
          tag = GER
          tag = GEA
          tag = GEX
        }
      }
      if = {
        limit = {
          QIE = {
            exists = yes
            NOT = {
              has_country_flag = wu_intervenes_proANQ
              has_country_flag = QIE_manchu_restoration
              has_country_flag = wu_no_intervene
            }
            china_annexation_valid_tag = yes
          }
        }
        QIE = {
          save_event_target_as = china_ally_target
        }
      }
      else_if = {
        limit = {
          LEP = {
            exists = yes
            china_annexation_valid_tag = yes
          }
        }
        LEP = {
          save_event_target_as = china_ally_target
        }
      }
      else_if = {
        limit = {
          NOT = {
            country_exists = LEP
          }
        }
        LEP = {
          save_event_target_as = china_release_target
        }
      }
    }
    else_if = {
      limit = {
        tag = JAP
      }
      if = {
        limit = {
          FNG = {
            exists = yes
            FNG_JAP_hostile = no
            china_annexation_valid_tag = yes
          }
        }
        FNG = {
          save_event_target_as = china_ally_target
        }
      }
      else_if = {
        limit = {
          NOT = {
            country_exists = FNG
          }
        }
        FNG = {
          save_event_target_as = china_release_target
        }
      }
    }
    else_if = {
      limit = {
        tag = MON
      }
      if = {
        limit = {
          QIE = {
            exists = yes
            OR = {
              has_country_flag = wu_intervenes_proANQ
              has_global_flag = QIE_manchu_restoration
              has_country_flag = wu_no_intervene
            }
            china_annexation_valid_tag = yes
          }
        }
        QIE = {
          save_event_target_as = china_ally_target
        }
      }
      else_if = {
        limit = {
          NOT = {
            country_exists = QIE
          }
        }
        QIE = {
          save_event_target_as = china_release_target
        }
      }
    }
    else_if = {
      limit = {
        tag = RUS
      }
      if = {
        limit = {
          OR = {
            RUS_russian_monarch = yes
            has_government = paternal_autocrat
            has_government = authoritarian_democrat
            has_global_flag = Russia_Supports_QIE
            has_global_flag = Russia_Supports_ZHI
          }
          NOT = {
            has_global_flag = Russia_Supports_LKMT
          }
          NOT = {
            has_global_flag = Russia_Supports_RKMT
          }
          NOT = {
            has_global_flag = Russia_Supports_Federalists
          }
          NOT = {
            has_global_flag = Russia_Supports_FNG
          }
        }
        if = {
          limit = {
            QIE = {
              exists = yes
              OR = {
                has_country_flag = wu_intervenes_proANQ
                has_global_flag = QIE_manchu_restoration
                has_country_flag = wu_no_intervene
              }
              china_annexation_valid_tag = yes
            }
          }
          QIE = {
            save_event_target_as = china_ally_target
          }
        }
        else_if = {
          limit = {
            NOT = {
              country_exists = QIE
            }
          }
          QIE = {
            save_event_target_as = china_release_target
          }
        }
      }
      else_if = {
        limit = {
          OR = {
            has_right_democratic_government = yes
            has_government = national_populist
            has_global_flag = Russia_Supports_RKMT
          }
          NOT = {
            has_global_flag = Russia_Supports_LKMT
          }
          NOT = {
            has_global_flag = Russia_Supports_QIE
          }
          NOT = {
            has_global_flag = Russia_Supports_ZHI
          }
          NOT = {
            has_global_flag = Russia_Supports_Federalists
          }
          NOT = {
            has_global_flag = Russia_Supports_FNG
          }
        }
        if = {
          limit = {
            GXC = {
              exists = yes
              has_government = authoritarian_democrat
              china_annexation_valid_tag = yes
            }
          }
          GXC = {
            save_event_target_as = china_ally_target
          }
        }
        else_if = {
          limit = {
            NOT = {
              country_exists = GXC
            }
          }
          GXC = {
            save_event_target_as = china_release_target
          }
        }
      }
      else_if = {
        limit = {
          OR = {
            has_left_democratic_government = yes
            has_global_flag = Russia_Supports_Federalists
          }
          NOT = {
            has_global_flag = Russia_Supports_LKMT
          }
          NOT = {
            has_global_flag = Russia_Supports_QIE
          }
          NOT = {
            has_global_flag = Russia_Supports_ZHI
          }
          NOT = {
            has_global_flag = Russia_Supports_RKMT
          }
          NOT = {
            has_global_flag = Russia_Supports_FNG
          }
        }
        if = {
          limit = {
            GXC = {
              exists = yes
              is_ruled_by_federalists = yes
              china_annexation_valid_tag = yes
            }
          }
          GXC = {
            save_event_target_as = china_ally_target
          }
        }
        else_if = {
          limit = {
            NOT = {
              country_exists = GXC
            }
          }
          GXC = {
            save_event_target_as = china_release_target
          }
        }
      }
      else = {
        if = {
          limit = {
            CHI = {
              exists = yes
              china_annexation_valid_tag = yes
            }
          }
          CHI = {
            save_event_target_as = china_ally_target
          }
        }
        else_if = {
          limit = {
            NOT = {
              country_exists = CHI
            }
          }
          CHI = {
            save_event_target_as = china_release_target
          }
        }
      }
    }
    else_if = {
      limit = {
        has_authoritarian_government = yes
      }
      if = {
        limit = {
          QIE = {
            exists = yes
            NOT = {
              has_country_leader = {
                name = "溥仪"  # Puyi
                ruling_only = yes
              }
            }
            china_annexation_valid_tag = yes
          }
        }
        QIE = {
          save_event_target_as = china_ally_target
        }
      }
      else_if = {
        limit = {
          NOT = {
            country_exists = QIE
          }
        }
        QIE = {
          save_event_target_as = china_release_target
        }
      }
    }
    else = {
      if = {
        limit = {
          GXC = {
            exists = yes
            is_ruled_by_federalists = yes
            china_annexation_valid_tag = yes
          }
        }
        GXC = {
          save_event_target_as = china_ally_target
        }
      }
      else_if = {
        limit = {
          NOT = {
            country_exists = GXC
          }
        }
        GXC = {
          save_event_target_as = china_release_target
        }
      }
    }
  }
}
setup_puppet_leader_TIB = {
  if = {
    limit = {
      tag = XSM
    }
    TIB = {
      set_party_name = {
        ideology = paternal_autocrat
        long_name = XSM_syndicalist_party_long
        name = XSM_syndicalist_party
      }
      set_politics = {
        ruling_party = paternal_autocrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = paternal_autocrat
        popularity = 0.5
      }
      create_country_leader = {
        name = "马彪"  # Ma Biao
        desc = "POLITICS_XSM_MA_BIAO_ARMY_DESC"
        picture = "gfx/leaders/XSM/Portrait_XSM_Ma_Biao.png"
        expire = "1.1.1"
        ideology = paternal_autocrat_subtype
      }
      set_country_flag = was_puppeted
    }
  }
  else_if = {
    limit = {
      tag = ETS
    }
    TIB = {
      set_party_name = {
        ideology = national_populist
        long_name = XSM_syndicalist_party_long
        name = XSM_syndicalist_party
      }
      set_politics = {
        ruling_party = national_populist
        elections_allowed = no
      }
      add_popularity = {
        ideology = national_populist
        popularity = 0.5
      }
      create_country_leader = {
        name = "阿不都拉·布格拉"  # Abdullah Bughra
        picture = "gfx/leaders/ETS/Portrait_ETS_Abdullah_Bughra.png"
        expire = "1.1.1"
        ideology = national_populist_subtype
      }
      set_country_flag = was_puppeted
    }
  }
  else_if = {
    limit = {
      NOT = {
        tag = XSM
      }
      is_ruled_by_pro_zhili = yes
    }
    TIB = {
      set_party_name = {
        ideology = authoritarian_democrat
        long_name = XSM_syndicalist_party_long
        name = XSM_syndicalist_party
      }
      set_politics = {
        ruling_party = authoritarian_democrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = authoritarian_democrat
        popularity = 0.5
      }
      create_country_leader = {
        name = "贺国光"  # He Guoguang
        desc = "POLITICS_SZC_HE_GUOGUANG_DESC"
        picture = "gfx/leaders/SZC/Portrait_SZC_He_Guoguang.png"
        expire = "1.1.1"
        ideology = authoritarian_democrat_subtype
      }
      set_country_flag = was_puppeted
      random_unit_leader = {
        limit = {
          has_id = 1133
        }
        set_nationality = TIB
        promote_leader = yes
      }
    }
  }
  else_if = {
    limit = {
      NOT = {
        tag = XSM
      }
      is_ruled_by_pro_manchu = yes
    }
    TIB = {
      set_party_name = {
        ideology = authoritarian_democrat
        long_name = XSM_syndicalist_party_long
        name = XSM_syndicalist_party
      }
      set_politics = {
        ruling_party = authoritarian_democrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = authoritarian_democrat
        popularity = 0.5
      }
      create_country_leader = {
        name = "温宗尧"  # Wen Tsungyao
        picture = "gfx/leaders/QIE/Portrait_QIE_Wen_Tsungyao.png"
        expire = "1.1.1"
        ideology = authoritarian_democrat_subtype
      }
      set_country_flag = was_puppeted
    }
  }
  else_if = {
    limit = {
      NOT = {
        tag = XSM
      }
      is_ruled_by_federalists = yes
    }
    TIB = {
      set_party_name = {
        ideology = paternal_autocrat
        long_name = XSM_syndicalist_party_long
        name = XSM_syndicalist_party
      }
      set_politics = {
        ruling_party = paternal_autocrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = paternal_autocrat
        popularity = 0.5
      }
      create_country_leader = {
        name = "黄慕松"  # Huang Musong
        picture = "gfx/leaders/TIB/Portrait_TIB_Huang_Musong.png"
        expire = "1.1.1"
        ideology = paternal_autocrat_subtype
      }
      set_country_flag = was_puppeted
    }
  }
  else_if = {
    limit = {
      NOT = {
        tag = XSM
      }
      is_ruled_by_kmt = yes
    }
    TIB = {
      set_politics = {
        ruling_party = social_democrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = social_democrat
        popularity = 0.5
      }
    }
  }
}
setup_puppet_leader_MON = {
  if = {
    limit = {
      OR = {
        tag = QIE
        tag = FNG
      }
    }
    MON = {
      set_party_name = {
        ideology = paternal_autocrat
        long_name = XSM_syndicalist_party_long
        name = XSM_syndicalist_party
      }
      set_politics = {
        ruling_party = paternal_autocrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = paternal_autocrat
        popularity = 0.5
      }
      create_country_leader = {
        name = "李守信"  # Li Shouxin
        picture = "gfx/leaders/MON/Portrait_MON_Li_Shouxin.png"
        expire = "1.1.1"
        ideology = paternal_autocrat_subtype
      }
      set_country_flag = was_puppeted
    }
  }
  else_if = {
    limit = {
      is_chinese_tag = yes
      NOT = {
        tag = QIE
        tag = FNG
      }
      OR = {
        tag = XSM
        is_ruled_by_kmt = no
      }
    }
    MON = {
      set_party_name = {
        ideology = paternal_autocrat
        long_name = XSM_syndicalist_party_long
        name = XSM_syndicalist_party
      }
      set_politics = {
        ruling_party = paternal_autocrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = paternal_autocrat
        popularity = 0.5
      }
      create_country_leader = {
        name = "卓特巴扎普"  # Jodbajab
        picture = "gfx/leaders/MON/Portrait_MON_Jodbajab.png"
        expire = "1.1.1"
        ideology = paternal_autocrat_subtype
      }
      set_country_flag = was_puppeted
    }
  }
  else_if = {
    limit = {
      is_chinese_tag = yes
      NOT = {
        tag = QIE
        tag = FNG
        tag = XSM
      }
      is_ruled_by_kmt = yes
    }
    MON = {
      set_politics = {
        ruling_party = social_democrat
        elections_allowed = no
      }
      add_popularity = {
        ideology = social_democrat
        popularity = 0.5
      }
    }
  }
  else_if = {
    limit = {
      is_russian_tag_that_can_integrate = yes
      has_socialist_government = no
      NOT = {
        has_government = social_democrat
      }
    }
    MON = {
      set_country_flag = MON_soyombo_in_power_flag
      set_politics = {
        ruling_party = paternal_autocrat
        elections_allowed = no
      }
      set_party_name = {
        ideology = paternal_autocrat
        long_name = MON_RUS_party_long
        name = MON_RUS_party
      }
      set_cosmetic_tag = MON_RUS
      create_country_leader = {
        name = "鲍里斯·雷祖欣"  # Boris Rezukhin
        desc = "POLITICS_REZUKHIN_LEADER_DESC"
        picture = "gfx/leaders/MON/Portrait_MON_Boris_Rezukhin.png"
        expire = "1.1.1"
        ideology = junta_subtype
      }
      remove_all_ministers = yes
      add_ideas = {
        MON_Boris_Rezukhin_hog_pau
        MON_Ferdynand_Ossendowski_for_pau
        MON_Rinchen_Sengge_eco_ade
        MON_Leonid_Sipaylov_sec_pau
      }
    }
  }
}
setup_puppet_leader_XSM = {
  if = {
    limit = {
      has_socialist_government = no
    }
    XSM = {
      hidden_effect = {
        set_party_name = {
          ideology = paternal_autocrat
          long_name = XSM_syndicalist_party_long
          name = XSM_syndicalist_party
        }
        set_party_name = {
          ideology = authoritarian_democrat
          long_name = XSM_syndicalist_party_long
          name = XSM_syndicalist_party
        }
        set_party_name = {
          ideology = social_conservative
          long_name = XSM_syndicalist_party_long
          name = XSM_syndicalist_party
        }
        set_party_name = {
          ideology = national_populist
          long_name = XSM_syndicalist_party_long
          name = XSM_syndicalist_party
        }
      }
      meta_effect = {
        text = {
          create_country_leader = {
            name = "扎西顿珠"  # Tashi Döndrub
            desc = "POLITICS_TAISHI_DONDRUBN_DESC"
            picture = "gfx/leaders/TIB/Portrait_TIB_Tashi_Dondrub.png"
            expire = "1.1.1"
            ideology = [OVERLORD_IDEOLOGY]
          }
        }
        OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
      }
      hidden_effect = {
        TIB = {
          every_unit_leader = {
            limit = {
              has_id = 9993
            }
            promote_leader = yes
            set_nationality = XSM
          }
        }
      }
      set_country_flag = was_puppeted
    }
  }
}
transfer_iraq = {
  every_owned_state = {
    limit = {
      is_claim_or_core_of_ROOT = no
      OR = {
        AND = {
          region = 239
          NOT = {
            state = 812
          }
        }
        AND = {
          state = 677
          NOT = {
            SYR = {
              is_ally_of_ROOT = yes
            }
            554 = {
              is_valid_annexation_state = yes
            }
          }
        }
        AND = {
          ASY = {
            NOT = {
              is_in_faction_with = FROM
              is_subject_of = FROM
            }
          }
          state = 812
        }
      }
      if = {
        limit = {
          state = 819
        }
        ROOT = {
          NOT = {
            tag = TUR
            tag = PER
          }
        }
        TUR = {
          ROOT_can_grant_land = no
        }
        PER = {
          ROOT_can_grant_land = no
        }
        350 = {
          is_valid_annexation_state = no
        }
        352 = {
          is_valid_annexation_state = no
        }
        417 = {
          is_valid_annexation_state = no
        }
        421 = {
          is_valid_annexation_state = no
        }
      }
    }
    if = {
      limit = {
        var:tag_to_release = {
          tag = TUR
        }
      }
      remove_claim_and_add_core_of_target = yes
    }
    else_if = {
      limit = {
        NOT = {
          is_core_of = var:tag_to_release
          is_claimed_by = var:tag_to_release
        }
      }
      add_claim_by = var:tag_to_release
    }
    transfer_state_to = var:tag_to_release
  }
}
transfer_sinai_if_annexation_unavailable = {
  if = {
    limit = {
      453 = {
        is_valid_annexation_state = yes
      }
      EGY = {
        ROOT_can_grant_land = no
      }
      446 = {
        is_valid_annexation_state = no
      }
    }
    var:tag_to_release = {
      add_state_claim = 453
      transfer_state = 453
    }
  }
}