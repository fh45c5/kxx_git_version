add_namespace = kxx_rf_fra

country_event = {
	id = kxx_rf_fra.1

	title = kxx_rf_fra.1.t
	desc = kxx_rf_fra.1.d
    #picture = 
	fire_only_once = yes
	is_triggered_only = yes
	option = {
		name = "艺术家阿尔托带领激进未来主义者夺取了政权"
		load_focus_tree = france_rf
		set_cosmetic_tag = FRA_accelerationism
		clr_country_flag = KXX_LEADER_GUI_VISIBLE
		clr_country_flag = FRG_Robert_Brasillach_VISIBLE
		create_country_leader = {
			name = "安托南·阿尔托"
			picture = "gfx/leaders/FRA/Portriat_FRA_Antonin_Artaud.png"
			expire = "1965.1.1"
			ideology = natpop_futurism_subtype
		}
		set_politics = { 
			ruling_party =  national_populist
		}
		add_ideas =	FRA_divided_nation
		add_ideas =	 FRA_terre_futur
		add_ideas =	 FRA_abolish_army
	}
}


country_event = {
	id = kxx_rf_fra.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event comfrance.967"}
	title = comfrance.968.t
	desc = comfrance.968.d
	picture = GFX_report_event_soviet_soldiers_tank

	is_triggered_only = yes
	
	option = {
		name = comfrance.968.a
		add_stability = 0.1
	}
	option = {
		name = comfrance.968.b
		ai_chance = {
			factor = 0
		}
		every_state = {
			limit = {
				is_on_continent = europe
			}
			FRA = {
				add_state_core = PREV 
			}
		}
		if = {
			limit = {
				has_country_leader = {
					ruling_only = yes
					name = "莫里斯·多列士"
				}
			}
			set_cosmetic_tag = FRA_redjac_europe
		}
		if = {
			limit = {
				has_country_leader = {
					ruling_only = yes
					name = "雅克·多里奥"
				}
			}
			set_cosmetic_tag = FRA_natjac_europe
		}
		if = {
			limit = {
				has_country_leader = {
					ruling_only = yes
					name = "马塞尔·加香"
				}
			}
			set_cosmetic_tag = FRA_modjac_europe
		}
	}
	option = {
		name = comfrance.968.c
		ai_chance = {
			factor = 0
		}
		every_state = {
			FRA = {
				add_state_core = PREV 
			}
		}
		if = {
			limit = {
				has_country_leader = {
					ruling_only = yes
					name = "莫里斯·多列士"
				}
			}
			set_cosmetic_tag = FRA_redjac_world
		}
		if = {
			limit = {
				has_country_leader = {
					ruling_only = yes
					name = "雅克·多里奥"
				}
			}
			set_cosmetic_tag = FRA_natjac_world
		}
		if = {
			limit = {
				has_country_leader = {
					ruling_only = yes
					name = "马塞尔·加香"
				}
			}
			set_cosmetic_tag = FRA_modjac_world
		}
	}
}

country_event = {
	id = kxx_rf_fra.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event comfrance.969"}
	title = comfrance.969.t
	desc = comfrance.969.d
	picture = GFX_report_event_soviet_soldiers_tank

	trigger = {
		NOT = { country_exists = GER }
		NOT = { country_exists = MAF }
		NOT = { country_exists = GEA }
		owns_state = 64
		OR = {
			has_country_flag = FRA_red_jac_sup
			has_country_flag = FRA_nat_jac_sup
		}
	}
	
	option = {
		name = comfrance.969.a
	}
}
country_event = {
	id = kxx_rf_fra.4
	immediate = {log = "[GetDateText]: [Root.GetName]: event comfrance.970"}
	title = comfrance.970.t
	desc = comfrance.970.d
	picture = GFX_report_event_soviet_soldiers_tank

	trigger = {
		NOT = { country_exists = AUS }
		owns_state = 1137
		OR = {
			has_country_flag = FRA_red_jac_sup
			has_country_flag = FRA_nat_jac_sup
		}
	}
	
	option = {
		name = comfrance.970.a
	}
}

country_event = {
	id = kxx_rf_fra.5
	immediate = {log = "[GetDateText]: [Root.GetName]: event comfrance.950"}
	title = comfrance.9710.t
	desc = comfrance.9710.d
	picture = GFX_news_event_FRA_jacobin_split

	is_triggered_only = yes

	option = { 
		name = comfrance.9710.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_game_rule = {
					rule = FRA_jacobin_split 
					option = FRA_JACOBIN_SPLIT_NATS
				}
			}
		}
		add_stability = 0.02
		set_country_flag = FRA_red_jac_sup
		hidden_effect = {
			country_event = {
				id = comfrance.130
				days = 2
			}
		}
	}
	option = { 
		name = comfrance.9710.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_game_rule = {
					rule = FRA_jacobin_split 
					option = FRA_JACOBIN_SPLIT_REDS
				}
			}
		}
		create_country_leader = {
			name = "雅克·多里奥"
			picture = "gfx/leaders/FRA/Portrait_France_Jacques_Doriot.png"
			expire = "1.1.1"
			ideology = national_jacobinism_subtype
		}
		set_party_name = {
			ideology = totalist
			long_name = FRA_jacobins_long
			name = FRA_jacobins
		}
		set_country_flag = FRA_nat_jac_sup
	}
	option = { 
		name = comfrance.9710.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_game_rule = {
					rule = FRA_jacobin_split 
					option = FRA_JACOBIN_SPLIT_REDS
				}
			}
		}
		create_country_leader = {
			name = "马塞尔·加香"
			picture = "gfx/leaders/FRA/Portrait_France_Marcel_Cachin.png"
			expire = "1.1.1"
			ideology = broad_communism_subtype
		}
		set_party_name = {
			ideology = totalist
			long_name = FRA_parti_communiste_long
			name = FRA_parti_communiste
		}
		set_country_flag = FRA_mod_jac_sup
	}
}

country_event = {
	id = kxx_rf_fra.6
	immediate = {log = "[GetDateText]: [Root.GetName]: event comfrance.938"}
	title = comfrance.9712.t
	desc = comfrance.9712.d
	picture = GFX_news_event_FRA_supreme_rule

	is_triggered_only = yes
	
	option = {
		name = comfrance.9712.a
		set_cosmetic_tag = FRA_Jacobin
	}
}

country_event = {
	id = kxx_rf_fra.7
	immediate = {log = "[GetDateText]: [Root.GetName]: event comfrance.941"}
	title = comfrance.9711.t
	desc = comfrance.9711.d
	picture = GFX_news_event_FRA_new_revolution

	is_triggered_only = yes
	
	option = {
		name = comfrance.9711.a 
		add_country_leader_trait = jacobin_leader
	}
}